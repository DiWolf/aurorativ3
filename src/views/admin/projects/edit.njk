{% extends "templates/admin.njk" %}
{% block content %}
  {% include "partials/nav_admin.njk" %}
  <div class="container-fluid mt--6">
    <div class="col">
      <div class="card">
        <!-- Card header -->
        <div class="card-header border-0 d-flex justify-content-between align-items-center">
          <h3 class="mb-0">Editar Proyecto</h3>
          <a href="/admin/projects" class="btn btn-sm btn-secondary">
            <i class="ni ni-bold-left"></i>
            Volver
          </a>
        </div>
        <!-- Formulario -->
        <div class="card-body">
          {% if error %}
            <div class="alert alert-danger">{{ error }}</div>
          {% endif %}
          {% if success %}
            <div class="alert alert-success">{{ success }}</div>
          {% endif %}

          <form id="editForm" action="/admin/projects/{{ proyecto.id }}/edit" method="post" enctype="multipart/form-data">
            <!-- Cliente -->
            <div class="form-group">
              <label for="client">Cliente</label>
              <input type="text" class="form-control" id="client" name="client"
                     value="{{ proyecto.client }}" required>
            </div>

            <!-- Título -->
            <div class="form-group">
              <label for="title">Título</label>
              <input type="text" class="form-control" id="title" name="title"
                     value="{{ proyecto.title }}" required>
            </div>

            <!-- Descripción -->
            <div class="form-group">
              <label for="description">Descripción</label>
              <textarea id="description" name="description" rows="6" class="form-control">{{ proyecto.description | safe }}</textarea>
            </div>

            <!-- Resumen -->
            <div class="form-group">
              <label for="resume">Resumen (máx. 255 caracteres)</label>
              <input type="text" class="form-control" id="resume" name="resume"
                     maxlength="255" value="{{ proyecto.resume }}">
              <small class="form-text text-muted">Texto breve que resume el proyecto.</small>
            </div>

            <!-- URL -->
            <div class="form-group">
              <label for="url">URL del Proyecto (opcional)</label>
              <input type="url" class="form-control" id="url" name="url"
                     value="{{ proyecto.url }}">
            </div>

            <!-- Tecnologías -->
            <div class="form-group">
              <label for="technologies">Tecnologías</label>
              <select id="technologies" name="technologies[]" class="form-control" multiple>
                {% for tech in technologies %}
                  <option value="{{ tech.id }}"
                    {% for projectTech in projectTechnologies %}
                      {% if projectTech.id == tech.id %}selected{% endif %}
                    {% endfor %}>
                    {{ tech.name }}
                  </option>
                {% endfor %}
              </select>
              <small class="form-text text-muted">Mantén presionada CTRL (o CMD en Mac) para seleccionar varias.</small>
            </div>

            <!-- Imagen principal -->
            <div class="form-group">
              <label for="main_image">Imagen principal</label>
              {% if proyecto.main_image %}
                <div class="mb-2">
                  <img src="/public{{ proyecto.main_image }}" alt="{{ proyecto.title }}"
                       class="img-thumbnail" style="max-height: 120px;">
                </div>
              {% endif %}
              <input type="file" class="form-control-file" id="main_image" name="main_image">
            </div>

            <!-- Imágenes adicionales -->
            <div class="form-group">
              <label>Imágenes adicionales</label>
              {% if imagenes and imagenes.length > 0 %}
                <div class="mb-3 d-flex flex-wrap">
                  {% for img in imagenes %}
                    <div id="img-card-{{ img.id }}" class="mr-3 mb-3 text-center">
                      <img src="/public{{ img.image_path }}" alt="Imagen extra"
                           class="img-thumbnail" style="max-height: 120px;">
                      <button type="button" class="btn btn-sm btn-danger" style="margin-top: 5px;"
                              onclick="deleteImage({{ img.id }}, {{ proyecto.id }})">
                        Eliminar
                      </button>
                    </div>
                  {% endfor %}
                </div>
              {% else %}
                <p class="text-muted">No hay imágenes adicionales para este proyecto.</p>
              {% endif %}
            </div>

            <!-- Subir nuevas imágenes -->
            <div class="form-group">
              <label for="extra_images">Agregar más imágenes</label>
              <input type="file" id="extra_images" name="extra_images" class="form-control-file" multiple>
              <small class="form-text text-muted">Puedes seleccionar varias imágenes nuevas.</small>
            </div>

            <!-- Botones -->
            <div class="d-flex justify-content-between">
              <form action="/admin/projects/{{ proyecto.id }}/delete" method="post" onsubmit="return confirm('¿Estás seguro de que quieres eliminar este proyecto?')">
                <button type="submit" class="btn btn-danger">
                  <i class="ni ni-fat-remove"></i>
                  Eliminar Proyecto
                </button>
              </form>
              <button type="submit" class="btn btn-primary" form="editForm">
                <i class="ni ni-check-bold"></i>
                Guardar cambios
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  {# Si usas csurf, renderiza meta tag con token desde el backend: res.render(..., { csrfToken: req.csrfToken() }) #}
  {% if csrfToken %}
    <meta name="csrf-token" content="{{ csrfToken }}">
  {% endif %}

  <!-- Editor TinyMCE y Script de eliminación -->
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Inicializa TinyMCE (si está cargado)
      if (typeof tinymce !== 'undefined') {
        tinymce.init({
          selector: '#description',
          plugins: [
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons',
            'link', 'lists', 'media', 'searchreplace', 'table',
            'visualblocks', 'wordcount', 'checklist', 'mediaembed',
            'casechange', 'formatpainter', 'pageembed', 'a11ychecker',
            'tinymcespellchecker', 'permanentpen', 'powerpaste',
            'advtable', 'advcode', 'advtemplate', 'uploadcare',
            'mentions', 'tinycomments', 'tableofcontents',
            'footnotes', 'mergetags', 'autocorrect', 'typography',
            'inlinecss', 'markdown', 'importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | ' +
                   'link media table mergetags | addcomment showcomments | ' +
                   'spellcheckdialog a11ycheck typography uploadcare | ' +
                   'align lineheight | checklist numlist bullist indent outdent | ' +
                   'emoticons charmap | removeformat',
          menubar: false,
          branding: false,
          tinycomments_mode: 'embedded',
          tinycomments_author: 'AuroraTI',
          uploadcare_public_key: '9be29f0fa526627d7dca'
        });
      }

      // Función global para eliminar imagen
      window.deleteImage = function(imageId, projectId) {
        console.log(`Intentando eliminar imagen ${imageId} del proyecto ${projectId}`);

        if (typeof Swal === 'undefined') {
          if (!confirm('¿Eliminar imagen? Esta acción no se puede deshacer.')) return;
        }

        const runDelete = () => {
        console.log(`Eliminando imagen ${imageId} del proyecto ${projectId}`);  
          const url = `/admin/projects/${projectId}/images/${imageId}/delete`;
          const headers = { 'Accept': 'application/json' };

          // Si existe meta csrf-token en la página, leemos y la enviamos
          const meta = document.querySelector('meta[name="csrf-token"]');
          if (meta) headers['X-CSRF-Token'] = meta.getAttribute('content');

          fetch(url, {
            method: 'POST',
            credentials: 'same-origin', // importante si usas sesiones/cookies
            headers
          })
          .then(response => {
            console.log('Status:', response.status, 'Content-Type:', response.headers.get('content-type'));
            if (!response.ok) throw new Error('Respuesta no OK: ' + response.status);
            const ct = response.headers.get('content-type') || '';
            if (ct.includes('application/json')) return response.json();
            // si no hay JSON, asumimos éxito en 200/204
            return { success: response.status === 200 || response.status === 204 };
          })
          .then(data => {
            if (data && data.success) {
              // eliminar del DOM sin recargar
              const el = document.getElementById(`img-card-${imageId}`);
              if (el) el.remove();

              if (typeof Swal !== 'undefined') {
                Swal.fire({ title: '¡Eliminado!', text: 'La imagen ha sido eliminada.', icon: 'success', timer: 1200, showConfirmButton:false });
              }
            } else {
              throw new Error(data.message || 'No se pudo eliminar la imagen');
            }
          })
          .catch(err => {
            console.error('Error al eliminar imagen:', err);
            if (typeof Swal !== 'undefined') {
              Swal.fire('Error', 'Hubo un problema al eliminar la imagen: ' + err.message, 'error');
            } else {
              alert('Error al eliminar la imagen: ' + err.message);
            }
          });
        };

        // Si tienes Swal, muestra confirm; si no, usa confirm simple
        if (typeof Swal !== 'undefined') {
          Swal.fire({
            title: '¿Estás seguro?',
            text: "Esta acción no se puede deshacer",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
          }).then((result) => {
            console.log('result', result);
            // Compatibilidad con diferentes versiones de SweetAlert2
            if (result.isConfirmed || result.value === true) {
              runDelete();
            }
          });
        } else {
          if (confirm('¿Eliminar imagen? Esta acción no se puede deshacer.')) runDelete();
        }
      };
    });
  </script>
{% endblock %}
